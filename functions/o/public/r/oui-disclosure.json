{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "oui-disclosure",
  "type": "registry:ui",
  "dependencies": [
    "react-aria-components",
    "lucide-react"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "../oui/src/oui-disclosure.tsx",
      "content": "import { ChevronDown } from \"lucide-react\";\nimport * as Rac from \"react-aria-components\";\nimport {\n  composeTailwindRenderProps,\n  disabledStyles,\n  focusVisibleStyles,\n} from \"./oui-base\";\nimport { Heading } from \"./oui-heading\";\n\n/**\n * Derived from shadcn AccordionItem\n */\nexport function Disclosure({ className, ...props }: Rac.DisclosureProps) {\n  return (\n    <Rac.Disclosure\n      className={composeTailwindRenderProps(\n        className,\n        \"group border-b last:border-b-0\",\n      )}\n      {...props}\n    />\n  );\n}\n\n/**\n * Derived from shadcn AccordionTrigger\n */\nexport function DisclosureButton({\n  className,\n  children,\n  ...props\n}: Rac.ButtonProps) {\n  return (\n    <Rac.Button\n      slot=\"trigger\"\n      className={composeTailwindRenderProps(className, [\n        focusVisibleStyles,\n        disabledStyles,\n        \"flex flex-1 items-start justify-between gap-4 rounded-md py-4 text-left text-sm font-medium transition-all data-[hovered]:underline\",\n      ])}\n      {...props}\n    >\n      {(renderProps) => (\n        <>\n          {typeof children === \"function\" ? children(renderProps) : children}\n          <ChevronDown className=\"text-muted-foreground pointer-events-none size-4 shrink-0 translate-y-0.5 transition-transform duration-200 group-data-[expanded]:rotate-180\" />\n        </>\n      )}\n    </Rac.Button>\n  );\n}\n\n/**\n * Derived from shadcn AccordionContent.\n *\n * `Rac.DisclosurePanel` adds a `hidden` attribute when collapsed, preventing\n * exit animations.\n */\nexport function DisclosurePanel({\n  className,\n  children,\n  ...props\n}: Rac.DisclosurePanelProps) {\n  return (\n    <Rac.DisclosurePanel\n      className={composeTailwindRenderProps(\n        className,\n        \"grid text-sm transition-[grid-template-rows] duration-200 ease-out [grid-template-rows:0fr] group-data-[expanded]:[grid-template-rows:1fr]\",\n      )}\n      {...props}\n    >\n      <div className=\"overflow-hidden\">\n        <div className=\"pb-4 pt-0\">{children}</div>\n      </div>\n    </Rac.DisclosurePanel>\n  );\n}\n\nexport interface DisclosureExProps\n  extends Omit<Rac.DisclosureProps, \"children\"> {\n  title?: string;\n  children?: Rac.DisclosurePanelProps[\"children\"];\n}\n\nexport function DisclosureEx({ title, children, ...props }: DisclosureExProps) {\n  return (\n    <Disclosure {...props}>\n      <Heading variant=\"disclosure\">\n        <DisclosureButton>{title}</DisclosureButton>\n      </Heading>\n      <DisclosurePanel>{children}</DisclosurePanel>\n    </Disclosure>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}