{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "oui-list-box",
  "type": "registry:ui",
  "dependencies": [
    "react-aria-components",
    "lucide-react"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "../oui/src/oui-list-box.tsx",
      "content": "import { Check } from \"lucide-react\";\nimport * as Rac from \"react-aria-components\";\nimport { twMerge } from \"tailwind-merge\";\nimport {\n  composeTailwindRenderProps,\n  disabledStyles,\n  focusVisibleStyles,\n} from \"./oui-base\";\nimport { buttonVariants } from \"./oui-button\";\n\n/** Styles derived from shadcn SelectItem.\n * https://github.com/adobe/react-spectrum/issues/7601\n */\nexport function ListBoxItem<T extends object>({\n  className,\n  children,\n  ...props\n}: Rac.ListBoxItemProps<T>) {\n  return (\n    <Rac.ListBoxItem\n      {...props}\n      textValue={\n        props.textValue ?? (typeof children === \"string\" ? children : undefined)\n      }\n      className={composeTailwindRenderProps(className, [\n        focusVisibleStyles,\n        disabledStyles,\n        \"relative flex w-full cursor-default select-none items-center gap-2 rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none\",\n        \"[&_svg:not([class*='text-'])]:text-muted-foreground [&_svg:not([class*='size-'])]:size-4 [&_svg]:pointer-events-none [&_svg]:shrink-0\",\n        \"data-[focused]:bg-accent data-[focused]:text-accent-foreground\",\n        \"data-[hovered]:bg-accent data-[hovered]:text-accent-foreground\",\n      ])}\n    >\n      {Rac.composeRenderProps(\n        children,\n        (\n          children,\n          renderProps,\n        ) => (\n          <>\n            {renderProps.isSelected && (\n              <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n                <Check className=\"size-4\" />\n              </span>\n            )}\n            {children}\n          </>\n        ),\n      )}\n    </Rac.ListBoxItem>\n  );\n}\n\nexport function ListBoxEx1Pagination<T extends object>({\n  className,\n  \"aria-label\": ariaLabel = \"Pagination\",\n  ...props\n}: Rac.ListBoxProps<T>) {\n  return (\n    <nav aria-label=\"pagination\" className=\"mx-auto flex w-full justify-center\">\n      <Rac.ListBox\n        aria-label={ariaLabel}\n        orientation=\"horizontal\"\n        selectionMode=\"single\"\n        className={composeTailwindRenderProps(\n          className,\n          \"flex flex-row items-center gap-1\",\n        )}\n        {...props}\n      />\n    </nav>\n  );\n}\n\n/**\n * Pagination item styled as a button. Selected items use outline variant, others use ghost.\n */\nexport function ListBoxItemEx1Pagination<T extends object>({\n  className,\n  children,\n  ...props\n}: Rac.ListBoxItemProps<T>) {\n  return (\n    <Rac.ListBoxItem\n      {...props}\n      textValue={\n        props.textValue ??\n        (typeof children === \"string\"\n          ? children\n          : typeof children === \"number\"\n            ? String(children)\n            : undefined)\n      }\n      className={Rac.composeRenderProps(className, (className, renderProps) =>\n        twMerge(\n          \"cursor-pointer\",\n          buttonVariants({\n            ...renderProps,\n            variant: renderProps.isSelected ? \"outline\" : \"ghost\",\n            className,\n          }),\n        ),\n      )}\n    >\n      {children}\n    </Rac.ListBoxItem>\n  );\n}\n",
      "type": "registry:ui"
    }
  ]
}