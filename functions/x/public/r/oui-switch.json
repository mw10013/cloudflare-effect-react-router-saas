{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "oui-switch",
  "type": "registry:ui",
  "dependencies": [
    "react-aria-components"
  ],
  "registryDependencies": [
    "http://localhost:5173/r/oui-label.json",
    "http://localhost:5173/r/oui-text.json"
  ],
  "files": [
    {
      "path": "registry/components/ui/oui-switch.tsx",
      "content": "import React from \"react\";\nimport * as Rac from \"react-aria-components\";\nimport { twMerge } from \"tailwind-merge\";\nimport {\n  composeTailwindRenderProps,\n  groupFocusVisibleStyles,\n} from \"@/registry/components/ui/oui-base\";\nimport { labelComponentStyles } from \"@/registry/components/ui/oui-label\";\nimport { Text } from \"@/registry/components/ui/oui-text\";\n\nexport function Switch({ className, ...props }: Rac.SwitchProps) {\n  return (\n    <Rac.Switch\n      {...props}\n      className={composeTailwindRenderProps(className, [\n        labelComponentStyles,\n        \"group\",\n      ])}\n    />\n  );\n}\n\n/**\n * Derived from shadcn SwitchPrimitive.Root and SwitchPrimitive.Thumb\n */\nexport function SwitchIndicator({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={twMerge(\n        groupFocusVisibleStyles,\n        \"bg-input group-data-[selected]:bg-primary dark:bg-input/80 dark:group-data-[selected]:bg-primary shadow-xs inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent transition-all\",\n        className,\n      )}\n      {...props}\n    >\n      <span className=\"bg-background dark:bg-foreground dark:group-data-[selected]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform translate-x-0 group-data-[selected]:translate-x-[calc(100%-2px)]\" />\n    </div>\n  );\n}\n\nexport interface SwitchExProps extends Rac.SwitchProps {\n  indicatorPosition?: \"start\" | \"end\";\n  indicatorClassName?: string;\n  descriptionClassName?: string;\n  description?: React.ReactNode;\n  containerClassName?: string;\n}\n\nexport function SwitchEx({\n  indicatorPosition = \"start\",\n  className,\n  indicatorClassName,\n  descriptionClassName,\n  description,\n  children,\n  containerClassName,\n  ...props\n}: SwitchExProps) {\n  const descriptionId = description ? React.useId() : undefined;\n  return (\n    // Derived fromshadcn FormDemo div\n    <div className={twMerge(\"flex flex-col gap-0.5\", containerClassName)}>\n      <Switch\n        {...props}\n        className={composeTailwindRenderProps(className, [\n          \"peer\",\n          indicatorPosition === \"end\" && \"justify-between\",\n        ])}\n        aria-describedby={descriptionId}\n      >\n        {(renderProps) => (\n          <>\n            {indicatorPosition === \"start\" && (\n              <SwitchIndicator className={indicatorClassName} />\n            )}\n            {typeof children === \"function\" ? children(renderProps) : children}\n            {indicatorPosition === \"end\" && (\n              <SwitchIndicator className={indicatorClassName} />\n            )}\n          </>\n        )}\n      </Switch>\n      {description && (\n        <Text\n          id={descriptionId}\n          slot=\"description\"\n          className={twMerge(\n            \"peer-data-[disabled]:opacity-60\",\n            descriptionClassName,\n          )}\n        >\n          {description}\n        </Text>\n      )}\n    </div>\n  );\n}\n",
      "type": "registry:ui"
    }
  ]
}