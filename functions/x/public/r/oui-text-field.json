{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "oui-text-field",
  "type": "registry:ui",
  "dependencies": [
    "react-aria-components"
  ],
  "registryDependencies": [
    "http://localhost:5173/r/oui-base.json",
    "http://localhost:5173/r/oui-field-error.json",
    "http://localhost:5173/r/oui-input.json",
    "http://localhost:5173/r/oui-label.json",
    "http://localhost:5173/r/oui-text.json"
  ],
  "files": [
    {
      "path": "registry/components/ui/oui-text-field.tsx",
      "content": "import * as Rac from \"react-aria-components\";\nimport { composeTailwindRenderProps } from \"@/registry/components/ui/oui-base\";\nimport { FieldError } from \"@/registry/components/ui/oui-field-error\";\nimport { Input } from \"@/registry/components/ui/oui-input\";\nimport { Label } from \"@/registry/components/ui/oui-label\";\nimport { Text } from \"@/registry/components/ui/oui-text\";\n\n/**\n * Derived styles from shadcn FormItem\n */\nexport function TextField({ className, ...props }: Rac.TextFieldProps) {\n  return (\n    <Rac.TextField\n      data-slot=\"form-item\"\n      className={composeTailwindRenderProps(className, \"group grid gap-2\")}\n      {...props}\n    />\n  );\n}\n\nexport interface TextFieldExProps extends Rac.TextFieldProps {\n  label?: React.ReactNode;\n  description?: React.ReactNode;\n  errorMessage?: string | ((validation: Rac.ValidationResult) => string);\n  placeholder?: string;\n}\n\nexport function TextFieldEx({\n  label,\n  description,\n  errorMessage,\n  placeholder,\n  children,\n  ...props\n}: TextFieldExProps) {\n  return (\n    <TextField {...props}>\n      {(renderProps) => (\n        <>\n          {label && typeof label === \"string\" ? <Label>{label}</Label> : label}\n          {children ? (\n            typeof children === \"function\" ? (\n              children(renderProps)\n            ) : (\n              children\n            )\n          ) : (\n            <Input placeholder={placeholder} />\n          )}\n          {description && <Text slot=\"description\">{description}</Text>}\n          <FieldError>{errorMessage}</FieldError>\n        </>\n      )}\n    </TextField>\n  );\n}\n\n/**\n * A TextField component where the label and input are arranged side-by-side.\n */\nexport function TextFieldEx1({\n  label,\n  description,\n  errorMessage,\n  placeholder,\n  children,\n  ...props\n}: TextFieldExProps) {\n  return (\n    <TextField {...props}>\n      {(renderProps) => (\n        <>\n          <div className=\"grid grid-cols-3 items-center gap-4\">\n            {label && typeof label === \"string\" ? (\n              <Label>{label}</Label>\n            ) : (\n              label\n            )}\n            {children ? (\n              typeof children === \"function\" ? (\n                children(renderProps)\n              ) : (\n                children\n              )\n            ) : (\n              <Input\n                placeholder={placeholder}\n                className={label ? \"col-span-2\" : \"col-span-3\"}\n              />\n            )}\n          </div>\n          {description && <Text slot=\"description\">{description}</Text>}\n          <FieldError>{errorMessage}</FieldError>\n        </>\n      )}\n    </TextField>\n  );\n}\n",
      "type": "registry:ui"
    }
  ]
}